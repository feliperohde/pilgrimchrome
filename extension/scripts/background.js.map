{"version":3,"sources":["source/_scripts/node_modules/browser-pack/_prelude.js","source/_scripts/source/_modules/pilgrim/pilgrim.js","source/_scripts/source/_scripts/background.js"],"names":[],"mappings":"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","file":"background.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export default class Pilgrim {\n  constructor(options) {\n    console.log('Pilgrim module');\n\n    var defaults = {\n\n      // cookiesRequests: [\n      //   {method: \"getCookies\", args: {url: 'http://pilgrim.itelios.net', name: 'Language'}},\n      //   {method: \"getCookies\", args: {url: 'http://pilgrim.itelios.net', name: 'pilcook_prj'}},\n      //   {method: \"getCookies\", args: {url: 'http://pilgrim.itelios.net', name: 'pilgrimAuthCookie'}},\n      //   {method: \"getCookies\", args: {url: 'http://pilgrim.itelios.net', name: '.ASPXROLES'}}\n      // ],\n\n      cookies: [],\n      isSyncedCookies: false,\n\n      domain: 'http://pilgrim.itelios.net',\n\n\n      tasks: {},\n\n      getGroupTaskUri: 'http://pilgrim.itelios.net/Task/getGroupTasks', /*\n\n      post\n      headers:\n      query: ?prjId=3995797f-9a8a-4d36-8f01-079c6edb4f24\n      {\n\n      }\n\n\n       */\n      createTask: 'http://pilgrim.itelios.net/Task/Create/' /*\n\n      post\n      headers:\n      data:\n      {\n        ProjectID: '95e09e2b-a45b-4113-8d92-79abfb881441' // interno,\n        cbPrjModeID: 1,\n        IsChecked: 0,\n        TaskGroupID: 'c9ebb70c-2789-4ca6-9df9-1b6bd80dcc49' // tarefas nao faturadas\n        TimeSheetDate: 22/05/2017,\n        Name: 'nome da task',\n        taskStartDate: '23/05/2017 00:00:00',\n        taskEndDate: '24/05/2017 00:00:00',\n        PlannedWork: 20\n      }\n\n      */\n\n    };\n\n    this.options = Object.assign({}, defaults, options);\n\n    this._syncCookies(function (data) {\n      this.options.isSyncedCookies = true;\n\n      this._up();\n\n    }.bind(this));\n\n    //mÃ©todos expostos\n\n    this.listem =  this._listemEvents;\n\n  };\n\n  _listemEvents () {\n\n    chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n\n      console.log(request);\n\n      switch(request.method) {\n        case 'syncTasks':\n\n          this._postTasks();\n\n        break;\n\n        case 'receiveTasks':\n\n          this._receiveTasks(request.args.list);\n\n\n        default:\n          console.log('Invalid...');\n      }\n\n\n    }.bind(this));\n\n  };\n\n  _up () {\n    console.log(this.options.cookies);\n\n    console.log('pronto para sincronizar e fazer qqr coisa no pilgrim...');\n  };\n\n  _receiveTasks (list) {\n\n      if(!list.length) return;\n\n      this.options.tasks = list;\n\n\n  };\n\n  _getCookie (name) {\n      for (var i = this.options.cookies.length - 1; i >= 0; i--) {\n\n        if(this.options.cookies[i].name === name)\n          return this.options.cookies[i];\n      }\n  };\n\n  _getAllCookies (domain, callback) {\n      chrome.cookies.getAll({\"url\": domain}, function(allCookies) {\n          if(callback) {\n              callback(allCookies);\n          }\n      });\n  };\n\n  _syncCookies (callback) {\n\n    this._getAllCookies(this.options.domain, function (data) {\n\n      this.options.cookies = data;\n\n      if(callback) {\n        callback(data);\n      }\n\n    }.bind(this));\n\n  };\n\n  //simula um post no pilgrim para cadastrar uma task inexistente\n  _postTask (task) {\n\n    console.log(task);\n\n    let cookie_lang =  this._getCookie('Language');\n    let cookie_pilgrimAuthCookie = this._getCookie('pilgrimAuthCookie');\n    let cookie_ASPXROLES = this._getCookie('.ASPXROLES');\n\n    // let header_cookie = \"Language=En; pilgrimAuthCookie=605E4E05C66E45307CB1DE8F875EA2ABA6633429838B6E0F19E9C9EAFF2DDBAF79BC7BF24EBDC4B38AD2ECADD91E6208A93FF5268FD976DB8CCF450CC59C96F148FE0746A610B681BB87F281601E1988B4703F2235096A403C61A4D1E24C245611F420735F6CDF303F6A02E4885435E446DEC5C3E782E84C3BD60BB7150A7FFDC783BB7C12833D41A5295E14BD5585A3; .ASPXROLES=_s0efXAmrBdhKQDLi0X-BuRzF8wK-i0dJ-FDGyCVuun6q06qjOZB2xfzsBbp2a5FWvd87BZnZxuoyTohRhB4W6zIOjND1-Xj1F_Xs25DbJMCXcL6-DIcJABNiAV2z0aR2tkmPnUd-k6Jx7RjfbosxHboUR0E1XLQjbAitxijG75jwsmbxjIzSXCwvHxJiPDAXrgPVaFFjpSfwXx88pNaDxaD_UMygiyI3EwBSrdzNnt1NcsRpCkTaqIMmrllBVReJ8qqKzSShd4frBVJ84btJMcKm1pb-XK-SppX-6T5ANxx62XFY4c1u1SbqDvCVH2eX2Di46KcIBR7wpHbkSppMGoHNHaOHTGNc0qQADXYnHvTipaRbvNCk2nCYbpOh0SlYgU0FBSyIYXVULRQ6z2vPx49dLdQEdoq2kAloZQa3HVxcbDY1qEfVzVEcoDJwfNxraouIpvdRi4TZDAz7WDHJKAtFm_ukYWqHevUo13chHzJ-mzG_XbmFP_Xqy_8-aMfkP_oEU5gxO1J47LLIrzDXut3C1kzn9f2VjDHxQZXLFnfyPbtrPlbAxaEQ7xBy1mME1ys3X8cPnqd4itcK5sWSulAz7zJrNStcsTFTjOgPh4fh6vnGvhpIdw5eW8rNMRIP2ASfljVrsvjlLYQ6Giza2nWETE6LQEusSKa_ScD0PJvbvLJTqgmMwC8uXm7L3951GYnDg03PA_n2Wl5rMjeRp1jtkN_rfgDyhbtFSqL_q_HfGcgJiM7lr8IjeEKre36WNQBloeUuWiAKmRrSXQ9dQVFZ-MWbdVtDmMXsrh5lbuXgxggcr9GbhgUxiBqjFIJ0\"\n    let header_cookie = \"Language=\" + cookie_lang.value + \"; pilgrimAuthCookie=\" + cookie_pilgrimAuthCookie.value + \"; .ASPXROLES=\" + cookie_ASPXROLES.value + \"\"\n\n\n    // var myheaders = new Headers();\n\n    let myheaders = {\n      'Accept': '*/*',\n      'Accept-Encoding': 'gzip, deflate, sdch',\n      'Accept-Language': 'en-US,en;q=0.8',\n      'X-Requested-With': 'XMLHttpRequest',\n      'Cookie': header_cookie\n    };\n\n    console.log(myheaders);\n\n    let body = {\n      ProjectID: '95e09e2b-a45b-4113-8d92-79abfb881441', // interno,\n      cbPrjModeID: 1,\n      IsChecked: 0,\n      TaskGroupID: 'c9ebb70c-2789-4ca6-9df9-1b6bd80dcc49', // tarefas nao faturadas\n      TimeSheetDate: \"22/05/2017\",\n      Name: task.excerpt,\n      taskStartDate: '23/05/2017 00:00:00',\n      taskEndDate: '24/05/2017 00:00:00',\n      PlannedWork: 20\n    };\n\n\n    // url (required), options (optional)\n    fetch(this.options.createTask, {\n\n      method: 'POST',\n      mode: 'cors',\n      headers: new Headers(myheaders),\n      body: JSON.stringify(body)\n\n    }).then(function(response) {\n\n      console.log(response);\n\n    }).catch(function(err) {\n      // Error :(\n    });\n\n  };\n\n\n  //pega uma lista de tarefas e itera mandando para o metodo postTask\n  _postTasks () {\n\n    for (var i = this.options.tasks.length - 1; i >= 0; i--) {\n      this._postTask(this.options.tasks[i]);\n    };\n\n  };\n\n}","// Main javascript entry point\n// Should handle bootstrapping/starting application\n\n//import $ from 'jquery';\nimport Pilgrim from '../_modules/pilgrim/pilgrim';\n// import css from '../_styles/css_map_all.json';\n\n'use strict';\n\n\nvar pilgrim = new Pilgrim();\n\npilgrim.listem();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}