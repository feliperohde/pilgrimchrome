{"version":3,"sources":["source/_scripts/node_modules/browser-pack/_prelude.js","source/_scripts/source/_modules/pilgrim/pilgrim.js","source/_scripts/source/_scripts/background.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;ICAqB,O;AACnB,mBAAY,OAAZ,EAAqB;AAAA;;AACnB,YAAQ,GAAR,CAAY,gBAAZ;;AAEA,QAAI,WAAW;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAS,EATI;AAUb,uBAAiB,KAVJ;;AAYb,cAAQ,4BAZK;;AAeb;;AAEA,uBAAiB,+CAjBJ,EAiBqD;;;;;;;AAWlE,kBAAY,yCA5BC,CA4ByC;;;;;;;;;;;;;;;;;AA5BzC,KAAf;;AAiDA,SAAK,OAAL,GAAe,OAAO,MAAP,CAAc,EAAd,EAAkB,QAAlB,EAA4B,OAA5B,CAAf;;AAEA,SAAK,YAAL,CAAkB,UAAU,IAAV,EAAgB;AAChC,WAAK,OAAL,CAAa,eAAb,GAA+B,IAA/B;;AAEA,WAAK,GAAL;AAED,KALiB,CAKhB,IALgB,CAKX,IALW,CAAlB;;AAOA;;AAEA,SAAK,MAAL,GAAe,KAAK,aAApB;AAED;;;;oCAEgB;;AAEf,aAAO,OAAP,CAAe,SAAf,CAAyB,WAAzB,CAAqC,UAAS,OAAT,EAAkB,MAAlB,EAA0B,YAA1B,EAAwC;;AAE3E,gBAAO,OAAP;AACE,eAAK,WAAL;;AAEE,iBAAK,SAAL,CAAe,QAAQ,IAAR,CAAa,IAA5B;;AAEF;;AAGA;AACE,oBAAQ,GAAR,CAAY,YAAZ;AATJ;AAaD,OAfD;AAiBD;;;0BAEM;AACL,cAAQ,GAAR,CAAY,KAAK,OAAL,CAAa,OAAzB;;AAEA,cAAQ,GAAR,CAAY,yDAAZ;AACD;;;+BAEW,M,EAAQ,I,EAAM,Q,EAAU;AAChC,aAAO,OAAP,CAAe,GAAf,CAAmB,EAAC,OAAO,MAAR,EAAgB,QAAQ,IAAxB,EAAnB,EAAkD,UAAS,MAAT,EAAiB;AAC/D,YAAG,QAAH,EAAa;AACT,mBAAS,OAAO,KAAhB;AACH;AACJ,OAJD;AAKH;;;mCAEe,M,EAAQ,Q,EAAU;AAC9B,aAAO,OAAP,CAAe,MAAf,CAAsB,EAAC,OAAO,MAAR,EAAtB,EAAuC,UAAS,UAAT,EAAqB;AACxD,YAAG,QAAH,EAAa;AACT,mBAAS,UAAT;AACH;AACJ,OAJD;AAKH;;;iCAEa,Q,EAAU;;AAEtB,WAAK,cAAL,CAAoB,KAAK,OAAL,CAAa,MAAjC,EAAyC,UAAU,IAAV,EAAgB;;AAEvD,aAAK,OAAL,CAAa,OAAb,GAAuB,IAAvB;;AAEA,YAAG,QAAH,EAAa;AACX,mBAAS,IAAT;AACD;AAEF,OARwC,CAQvC,IARuC,CAQlC,IARkC,CAAzC;AAUD;;;;;AAED;8BACW,I,EAAM;;AAEf,cAAQ,GAAR,CAAY,IAAZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AAED;;;;;AAGD;8BACW,K,EAAO;;AAEhB;AACA,UAAG,CAAC,MAAM,MAAV,EAAkB;;AAElB,WAAK,IAAI,IAAI,MAAM,MAAN,GAAe,CAA5B,EAA+B,KAAK,CAApC,EAAuC,GAAvC,EAA4C;AAC1C,iBAAS,MAAM,CAAN,CAAT;AACD;AAEF;;;;;;kBAjKkB,O;;;;;;ACIrB;;;;;;AACA;;AAEA,a,CAPA;AACA;;AAEA;;;AAOA,IAAI,UAAU,uBAAd;;AAEA,QAAQ,MAAR","file":"background.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export default class Pilgrim {\n  constructor(options) {\n    console.log('Pilgrim module');\n\n    var defaults = {\n\n      // cookiesRequests: [\n      //   {method: \"getCookies\", args: {url: 'http://pilgrim.itelios.net', name: 'Language'}},\n      //   {method: \"getCookies\", args: {url: 'http://pilgrim.itelios.net', name: 'pilcook_prj'}},\n      //   {method: \"getCookies\", args: {url: 'http://pilgrim.itelios.net', name: 'pilgrimAuthCookie'}},\n      //   {method: \"getCookies\", args: {url: 'http://pilgrim.itelios.net', name: '.ASPXROLES'}}\n      // ],\n\n      cookies: [],\n      isSyncedCookies: false,\n\n      domain: 'http://pilgrim.itelios.net',\n\n\n      // tasks: {},\n\n      getGroupTaskUri: 'http://pilgrim.itelios.net/Task/getGroupTasks', /*\n\n      post\n      headers:\n      query: ?prjId=3995797f-9a8a-4d36-8f01-079c6edb4f24\n      {\n          \n      }\n       \n\n       */\n      createTask: 'http://pilgrim.itelios.net/Task/Create/' /*\n\n      post\n      headers:\n      data:\n      {\n        ProjectID: '95e09e2b-a45b-4113-8d92-79abfb881441' // interno,\n        cbPrjModeID: 1,\n        IsChecked: 0,\n        TaskGroupID: 'c9ebb70c-2789-4ca6-9df9-1b6bd80dcc49' // tarefas nao faturadas\n        TimeSheetDate: 22/05/2017,\n        Name: 'nome da task',\n        taskStartDate: '23/05/2017 00:00:00',\n        taskEndDate: '24/05/2017 00:00:00',\n        PlannedWork: 20\n      } \n\n      */\n\n    };\n\n    this.options = Object.assign({}, defaults, options);\n\n    this._syncCookies(function (data) {\n      this.options.isSyncedCookies = true;\n\n      this._up();\n\n    }.bind(this));\n\n    //mÃ©todos expostos\n\n    this.listem =  this._listemEvents;\n    \n  };\n\n  _listemEvents () {\n\n    chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n\n      switch(request) {\n        case 'syncTasks':\n          \n          this.postTasks(request.args.list);\n\n        break;\n\n\n        default:\n          console.log('Invalid...');\n      }\n\n\n    });\n\n  };\n\n  _up () {\n    console.log(this.options.cookies);\n\n    console.log('pronto para sincronizar e fazer qqr coisa no pilgrim...');\n  };\n\n  _getCookie (domain, name, callback) {\n      chrome.cookies.get({\"url\": domain, \"name\": name}, function(cookie) {\n          if(callback) {\n              callback(cookie.value);\n          }\n      });\n  };\n\n  _getAllCookies (domain, callback) {\n      chrome.cookies.getAll({\"url\": domain}, function(allCookies) {\n          if(callback) {\n              callback(allCookies);\n          }\n      });\n  };\n\n  _syncCookies (callback) {\n\n    this._getAllCookies(this.options.domain, function (data) {\n\n      this.options.cookies = data;\n\n      if(callback) {\n        callback(data);\n      }\n\n    }.bind(this));   \n\n  };\n\n  //simula um post no pilgrim para cadastrar uma task inexistente\n  _postTask (task) {\n\n    console.log(task);\n\n    // $.ajax({\n    //   type: \"POST\",\n    //   url: url,\n    //   data: data,\n    //   success: success,\n    //   error: error,\n    //   dataType: dataType\n    // });\n\n\n    // function success () {\n\n    // }\n\n    // function error () {\n\n    // }\n\n  };\n\n\n  //pega uma lista de tarefas e itera mandando para o metodo postTask\n  postTasks (tasks) {\n\n    //tratar o erro aqui\n    if(!tasks.length) return;\n\n    for (var i = tasks.length - 1; i >= 0; i--) {\n      postTask(tasks[i]);\n    };\n\n  };\n\n}","// Main javascript entry point\n// Should handle bootstrapping/starting application\n\n//import $ from 'jquery';\nimport Pilgrim from '../_modules/pilgrim/pilgrim';\n// import css from '../_styles/css_map_all.json';\n\n'use strict';\n\n\nvar pilgrim = new Pilgrim();\n\npilgrim.listem();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}